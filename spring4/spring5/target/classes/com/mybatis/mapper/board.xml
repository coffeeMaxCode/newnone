<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mybatis.mapper.BoardMapper">
	
<!-- 트랜잭션 처리 / 트랜잭션 처리 실습 코드-->
	<!-- DEPT -->
	<insert id="deptInsert" parameterType="map">
		insert into dept (deptno, dname, loc)
				 values(#{deptno},#{dname},#{loc})
	</insert>
	<!-- EMP -->
	<insert id="empInsert" parameterType="map">
		insert into emp(
						empno, ename, job, mgr
						,hiredate, sal, comm, deptno
						) 
				 values(
				 	  #{empno},#{ename},#{job},#{mgr}
				 	 ,to_char(SYSDATE,'YYYY-MM-DD'),#{sal},#{comm},#{deptno}
				 	 )
	</insert>
	
<!-- 게시판 조회  : 전체 내용 수정
	<select id="boardList(delete)" parameterMap="map" resultType="com.vo.BoardMasterVO">
		SELECT 	bm.BM_TITLE, bm.BM_DATE, bm.BM_HIT, bm.BM_WRITER ,bs.BS_FILE
    		FROM BOARD_MASTER bm, BOARD_SUB bs
    		where bm.BM_NO=bs.BM_NO(+)
    		ORDER BY bm.BM_NO desc
	</select>																	-->
	
<!-- 게시판 글 추가 : 일반글 -->
	<insert id="boardMAdd" parameterType="com.vo.BoardMasterVO">
<!-- 	<selectKey>
			 select seq_board_no.nextval bno from dual 
		</selectKey> -->
		insert into board_master(bm_no, bm_title, bm_writer, bm_content, bm_pw, bm_email
								, bm_date, bm_group, bm_pos, bm_step)
						  values(#{bm_no}, #{bm_title}, #{bm_writer}, #{bm_content}, #{bm_pw}, #{bm_email}
						  		,TO_CHAR(SYSDATE,'YYYY-MM-DD'), #{bm_group}, #{bm_pos}, #{bm_step})
		<!-- bm_no: 시퀸스로 채번하기 -->			  		
		<!-- insert into board_master(bm_no, bm_title, bm_writer, bm_content, bm_pw, bm_email
								, bm_date, bm_group, bm_pos, bm_step)
						  values(seq_board_no.nextval, #{bm_title}, #{bm_writer}, #{bm_content}, #{bm_pw}, #{bm_email}
						  		,TO_CHAR(SYSDATE,'YYYY-MM-DD'), #{bm_group}, #{bm_pos}, #{bm_step}) -->
	</insert>
<!-- 게시판 글 추가 : 파일첨부 -->
	<insert id="boardSAdd" parameterType="com.vo.BoardSubVO">
		insert into BOARD_SUB (bm_no, bs_seq, bs_file, bs_size)
               values(#{bm_no}, 1, #{bs_file}, #{bs_size})
	</insert>
	
<!-- 수정 : 일반글-->
	<update id="boardMUpd" parameterType="com.vo.BoardMasterVO">
	UPDATE board_master 
			SET bm_title=#{bm_title},
				bm_writer=#{bm_writer}, 
				bm_email=#{bm_email},
				bm_content=#{bm_content}
		WHERE   bm_no = #{bm_no}
	</update>
<!-- 수정 : 첨부파일 -->
	<update id="boardSUpd" parameterType="com.vo.BoardSubVO">
		UPDATE board_sub 
			SET bs_file=#{bs_file},
				bs_size=#{bs_size}
		WHERE bm_no = #{bm_no}
	</update>
	
<!-- 게시글 삭제 -->
	<delete id="boardMDel" parameterType="com.vo.BoardMasterVO">
		delete from board_master where bm_no = #{bm_no}
	</delete>
<!-- 첨부파일 삭제 -->
	<delete id="boardSDel" parameterType="com.vo.BoardSubVO">
		delete from board_sub where bm_no = #{bm_no}
	</delete>

<!-- 게시판 전체 게시글 수 -->
	<select id="getTotal" parameterType="com.vo.BoardMasterVO" resultType="int">
		SELECT count(bm.bm_no)
			FROM BOARD_MASTER bm, BOARD_SUB bs
            WHERE bm.bm_no = bs.bm_no(+)
            <!-- WHERE 절 -->
             <!-- Title별 검색 -->
				<if test="cb_search!=null and cb_search.equals('bm_title')">
					AND bm_title LIKE '%'||#{keyword}||'%'
				</if>
			<!-- Content별 검색 -->
				<if test="cb_search!=null and cb_search.equals('bm_content')">
					AND bm_content LIKE '%'||#{keyword}||'%'
				</if>
			<!-- Writer별 검색 -->
				<if test="cb_search!=null and cb_search.equals('bm_writer')">
					AND bm_writer LIKE '%'||#{keyword}||'%'
				</if>
			<!-- Date별 검색 -->
				<if test="bm_date!=null and bm_date.length()>0">
					AND bm_date LIKE '%'||#{bm_date}||'%'
				</if>
	</select>
	
<!-- 게시판목록 게시글 처리 -->
	<select id="boardList" parameterType="com.vo.BoardMasterVO" resultType="map">
		SELECT rno
				, bm_no, bm_title, bm_writer, bm_date, NVL(bs_file,' ') bs_file, bm_hit
				,bm_email, bm_content, bm_group, bm_pos, bm_step
				, bm_pw
    		FROM (
    				SELECT rownum rno
    						, bm_no
    						, bm_title, bm_writer, bm_date, bs_file, bm_hit
							, bm_email, bm_content, bm_group, bm_pos, bm_step
							, bm_pw
	    				FROM(
	    					SELECT bm.bm_no
		    						, bm.bm_title, bm.bm_writer, bm.bm_date, bs.bs_file, bm.bm_hit
		    						, bm.bm_email, bm.bm_content, bm.bm_group, bm.bm_pos ,bm.bm_step
		    						, bm.bm_pw
		    					FROM BOARD_MASTER bm, BOARD_SUB bs
		                		WHERE bm.bm_no = bs.bm_no(+)						
					            <!-- WHERE 절 -->
					           	<!-- Title별 검색 -->
									<if test="cb_search!=null and cb_search.equals('bm_title')">
										AND bm_title LIKE '%'||#{keyword}||'%'
									</if>
								<!-- Content별 검색 -->
									<if test="cb_search!=null and cb_search.equals('bm_content')">
										AND bm_content LIKE '%'||#{keyword}||'%'
									</if>
								<!-- Writer별 검색 -->
									<if test="cb_search!=null and cb_search.equals('bm_writer')">
										AND bm_writer LIKE '%'||#{keyword}||'%'
									</if>
								<!-- Date별 검색 -->
									<if test="bm_date!=null and bm_date.length()>0">
										AND bm_date LIKE '%'||#{bm_date}||'%'
									</if>
					    		ORDER BY bm_group desc, bm_step asc
			    		)
         	  	 ) a
    		WHERE 1=1
    <!-- 페이지 처리 -->
		<if test="bm_no>0">
    		AND bm_no = #{bm_no}
    	</if>
    	<if test="start>0 and end>0">
    		 <![CDATA[ AND a.rno between #{start} and #{end} ]]>
    	</if>
		<!-- <![CDATA[@@@]]> : xml제공 태그안의 @@@를 무조건 텍스트 처리 : 오류방지 : <>를 태그로 처리하면 오류 -->
		<!-- <![CDATA[and rno>:#{start} and rno<=:#{end}]]> -->
	</select>
	
<!-- 글 번호 채번하기 -->
	<!-- 시퀸스의 문제점 : 벊를 채번하고 마스터 테이블에 추가 후, 서브테이블에 추가 할 때, 번호를 유지할 방법이 없음
		 왜냐하면 채번한 후, 현재 시퀸스 값을 확인 가능하지만, 
		 마스터 테이블에 insert하는 문장과 서브테이블에 insert하는 문장이 같은 쿼리문에 있지 않으므로 시퀸스 사용이 불가	-->
	<!-- 글번호를 max값을 이용하여 채번하고 1을 더하여, 다음번호를 채번
		  만일 프로시저를 사용한다면 한프로시저에서 처리하면 가능											-->
	<select id="getBmno" parameterType='int' resultType="int">
		SELECT  NVL(
                	(SELECT /*+index_desc(BOARD_MASTER BOARD_MASTER_PK) */ bm_no
                    	FROM BOARD_MASTER
                    	WHERE rownum=1)
            		,0)+1 bm_no
    		FROM dual
	</select>
<!-- 글 그룹번호 채번하기 -->
	<!-- 글번호 채번과 같은 상황 -->
	<!-- 시퀸스를 채번하여 사용하지않고, 원글에 대한 글번호를 가져와 사용해야함
		  채번하는 경우 에러가 발생하더라고 시퀸스 값은 새로운 값으로 채번이 일어남 → 연속되는 번호를 가질 수 없음
		  연속값을 꼭 가져야 하는 것은 아니지만, 여기서는 일반 컬럼에 인덱스를 생성할 수 있다는 점을 활용 				-->
	<select id="getBmgroup" parameterType='int' resultType="int">
		SELECT  NVL(
                	(SELECT /*+index_desc(BOARD_MASTER I_GROUP) */ bm_group
                    	FROM BOARD_MASTER
                    	WHERE rownum=1
                    	AND bm_group>0)
            		,0)+1 bm_group
    		FROM dual
	</select>	
	 
<!-- 글 순번 번호 채번 -->    
	<update id="bmStepUpdate" parameterType="com.vo.BoardMasterVO">
		UPDATE BOARD_MASTER 
				SET bm_step = bm_step+1
			WHERE bm_group = #{bm_group}
			<![CDATA[ AND bm_step > #{bm_step} ]]>
	</update>	
	
<!-- 조회수 조회 -->
	<update id="hitCount" parameterType='int'>
      UPDATE BOARD_MASTER
         SET bm_hit = bm_hit+1
       WHERE bm_no = #{value}
   </update>
   
</mapper>