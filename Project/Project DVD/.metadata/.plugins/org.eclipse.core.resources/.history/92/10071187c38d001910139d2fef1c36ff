package project_02_2_DVD_ADRRESS;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import util.DBConnectionMgr;

public class T04_AddressBookDao implements T05_AddressBookInterface {
	   java.sql.Connection          con     = null;
	   java.sql.PreparedStatement  	pstmt 	= null;
	   java.sql.ResultSet         	rs      = null;
	   util.DBConnectionMgr    		dbMgr 	= null;

	@Override
	public T03_AddressVO getAddressDetail(T03_AddressVO paVO) {
		System.out.println("DAO addressDetail호출 성공");
		T03_AddressVO raVO = null;
		return raVO;
	}

	@Override
	public T03_AddressVO AddressInsert(T03_AddressVO paVO) {
		System.out.println("AddressInsert 호출 성공");
		T03_AddressVO raVO = new T03_AddressVO();
		dbMgr= util.DBConnectionMgr.getInstance();
	      StringBuilder sql = new StringBuilder();//스트링쓰지말고 이거써서 문자열 붙여주세여.
	      int status =0;
	      try {
	         sql.append("   INSERT INTO mkaddrtb (id, name, hp, gender, birthday   ");
	         sql.append("        , comments, address, regdate)                     ");
	         sql.append("  VALUES('haha', '이성계'                                   ");
	         sql.append("         ,'01055559999','1'                               ");
	         sql.append("         ,'2000-10-29','고교동창'                           ");
	         sql.append("         ,'서울시 금천구 가산동'                                ");
	         sql.append("         ,TO_CHAR(sysdate,'YYYY-MM-DD'))                  ");
	         con = dbMgr.getConnection();
	         pstmt = con.prepareStatement(sql.toString());
	         status=pstmt.executeUpdate();
	         System.out.println(status);
	         raVO.setStatus(status); //T03_AddressVO status변수에 1 저장
	      }catch(SQLException se) {//ORA-XXXXX
	         System.out.println(sql.toString());
	      }catch(Exception e) {
	    	  System.out.println(e.toString());
	      }finally {
	         // TODO: handle finally clause
	      }   dbMgr.freeConnection(con,pstmt);
	      return null;
	   }


	@Override
	public T03_AddressVO AddressUpdate(T03_AddressVO paVO) {
		System.out.println("DAO addressUpdate호출 성공");
		T03_AddressVO raVO = null;
		return raVO;
	}

	@Override
	public T03_AddressVO AddressDelete(T03_AddressVO paVO) {
		System.out.println("DAO addressDelete호출 성공");
		T03_AddressVO raVO = null;
		return raVO;
	}


	@Override
	public List<T03_AddressVO> getAddress() {
		//조회한 결과 n건을 담기위한 객체 생성
		//테이블 정보는 계속 변함 : 배열은 변하지 않음
		List<T03_AddressVO> list = new ArrayList<T03_AddressVO>();
		dbMgr = DBConnectionMgr.getInstance();
		StringBuilder sql = new StringBuilder();
		sql.append("select id, name, address, gender, hp");
        sql.append("	  ,birthday ,comments, REGDATE  ");
        sql.append("	from mkaddrtb                   ");
        try {
			con = dbMgr.getConnection();
			// 접속해서 select전달 > 리턴값 받아오기 
			pstmt = con.prepareStatement(sql.toString());
			rs = pstmt.executeQuery();
			//re.previous() 쓰지 않는 이유 : 오라클 커서가 항상 디폴트 top에 있음
			//VO는 한행만 담을 수 있는 장애 보유 > list와 결합 > 다양한 값 가질 수 있음
			T03_AddressVO raVO = null;
			while(rs.next()) {
				raVO = new T03_AddressVO();
				raVO.setId(rs.getString("id"));
				raVO.setName(rs.getString("Name"));
				raVO.setAddress(rs.getString("Address"));
				raVO.setGender(rs.getString("Gender"));
				raVO.setBirthday(rs.getString("Birthday"));
				raVO.setHp(rs.getString("Hp"));
				raVO.setRegdate(rs.getString("Regdate"));
				raVO.setComments(rs.getString("Comments"));
				list.add(raVO);
			}
		} catch (Exception e) {
			// TODO: handle exception
		}finally {	//사용한 자원 반납하기 .con pstmt, rs
			dbMgr.freeConnection(con, pstmt, rs);
		}
		return list;
	}
	
	public static void main(String args[]) {
		new T04_AddressBookDao().AddressInsert(null);
	}
}
