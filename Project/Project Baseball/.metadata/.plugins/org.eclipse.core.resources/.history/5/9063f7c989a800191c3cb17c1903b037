package seontalk.view;

import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseWheelEvent;
import java.awt.event.MouseWheelListener;

import javax.swing.GroupLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JViewport;
import javax.swing.SwingUtilities;

@SuppressWarnings("serial")
public class MentorList extends JPanel {
	//전체화면 객체주입되는 변수
	MainPage 		page 			= null;
	Mentor			mentor			= null;

	//폰트 설정
	Font 			myfont 			= new Font("HY견고딕",Font.PLAIN,26);
	//버튼panel을 GroupLayout하는 panel
	JPanel 			jp_bubble2 		= new JPanel();	
	//스크롤 페이지
	JScrollPane 	jsp_bubble 		= new JScrollPane(jp_bubble2
										//메뉴목록에 스크롤 적용
										,JScrollPane.VERTICAL_SCROLLBAR_NEVER		
										//스크롤바 안보이게 설정(드래그,휠 이벤트 적용)
										,JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
	// // 넣어주는 페이지
	JPanel 		jp_bubble 			= new JPanel();
	//버튼처럼 사용될 panel(코드 최하단 중복클래스)
	MyPostButton jp_bt_java 		= new MyPostButton("자바,JSP");
	MyPostButton jp_bt_oracle 		= new MyPostButton("오라클 SQL");
	MyPostButton jp_bt_javascript 	= new MyPostButton("자바스크립트");
	MyPostButton jp_bt_html 		= new MyPostButton("HTML");
	MyPostButton jp_bt_android 		= new MyPostButton("안드로이드");
	//선택한 언어
	String name						= null;
	//언어별 선택 게시판
	MentorListSelect	jp_mls			= new MentorListSelect(this,name);
	
	public MentorList(MainPage page) {
		this.page = page;
		setLayout(null);
		initGroup();
		//화면이동 이벤트
		initMouseDrag();
		initMouseWheel();
		//게시판 이동 이벤트
		choosePost();
		//화면에 붙일때 미세한 라인이 잡혀서 border제거
		jsp_bubble.setBorder(null);	
		jp_bubble.add(jsp_bubble);
		setBackground(new Color(255,224,200));
	}
	
	public void initGroup() {
		//메뉴목록 GroupLayout 처리
		GroupLayout pageLayout = new GroupLayout(jp_bubble2);	
		jp_bubble2.setLayout(pageLayout);
		pageLayout.setHorizontalGroup(pageLayout.createSequentialGroup()
			.addGroup(pageLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
				.addComponent(jp_bt_java)
				.addComponent(jp_bt_oracle)
				.addComponent(jp_bt_javascript)
				.addComponent(jp_bt_html)
				.addComponent(jp_bt_android)
			)
		);
		pageLayout.setVerticalGroup(pageLayout.createSequentialGroup()
			.addComponent(jp_bt_java,100,100,100)
			.addComponent(jp_bt_oracle,100,100,100)
			.addComponent(jp_bt_javascript,100,100,100)
			.addComponent(jp_bt_html,100,100,100)
			.addComponent(jp_bt_android,100,100,100)
		);
		//상단제목,메뉴panel을 GroupLayout 처리
		GroupLayout pageLayout2 = new GroupLayout(jp_bubble);	
		jp_bubble.setLayout(pageLayout2);
		pageLayout2.setHorizontalGroup(pageLayout2.createSequentialGroup()
			.addGroup(pageLayout2.createParallelGroup(GroupLayout.Alignment.LEADING)
				.addComponent(this)
				.addComponent(jsp_bubble)
			)
		);
		pageLayout2.setVerticalGroup(pageLayout2.createSequentialGroup()
			.addComponent(this,75,75,75)
			.addComponent(jsp_bubble)
		);
	}
	
	//휠을 이용한 스크롤 이벤트 메소드
	public void initMouseWheel() {	
		jsp_bubble.addMouseWheelListener(new MouseWheelListener() {
			@Override
			//마우스 휠이 움직일때
			public void mouseWheelMoved(MouseWheelEvent e) {	
				//움직이는 정도의 값을 받아서
				int scroll = e.getWheelRotation(); 
				if(scroll<0) {
					JViewport viewPort = (JViewport) SwingUtilities.getAncestorOfClass(JViewport.class, jp_bubble2);
					if (viewPort != null) {
						//현재 보여지는 부분정보얻고
						Rectangle view = viewPort.getViewRect();	
						//그 정보에서의 y좌표를 정도값을 반영하여 수정
						view.y -= 20*Math.abs(scroll);				
						//수정값 만큼을 화면에 적용하면 스크롤을 움직이는 효과가 나타남.
						jp_bubble2.scrollRectToVisible(view);		
					}
				}
				else {
					JViewport viewPort = (JViewport) SwingUtilities.getAncestorOfClass(JViewport.class, jp_bubble2);
					if (viewPort != null) {
						Rectangle view = viewPort.getViewRect();
						view.y += 20*scroll;
						jp_bubble2.scrollRectToVisible(view);
					}
					
				}
				
			}
		});
	}
	
	//드래그를 이용한 스크롤 이벤트 메소드
	public void initMouseDrag() {	
		//마우스이벤트가 선언될 객체 생성
		MouseAdapter ma = new MouseAdapter() {	
			//초기 좌표값이 저장될 Point변수
            Point origin;	
            @Override
          //마우스가 눌렸을때
            public void mousePressed(MouseEvent e) {
            	//눌린 위치 point값 저장
                origin = new Point(e.getPoint());		
            }
            @Override
          //드래그가 되면
            public void mouseDragged(MouseEvent e) {	
                if (origin != null) {
                    JViewport viewPort = (JViewport) SwingUtilities.getAncestorOfClass(JViewport.class, jp_bubble2);
                    if (viewPort != null) {
                    	//초기위치와 드래그한 정도값(변화량)을 받고
                        int deltaY = origin.y - e.getY();		

                        Rectangle view = viewPort.getViewRect();
                      //변화량 만큼
                        view.y += deltaY;						
                      //화면이동을 적용
                        jp_bubble2.scrollRectToVisible(view);	
                    }
                }
            }
        };
      //마우스어댑터 객체를 스크롤이 적용되는 panel에 add
        jp_bubble2.addMouseListener(ma);		
        jp_bubble2.addMouseMotionListener(ma);
	}
	
	//화면 선택시 하단 화면 전환  > 지금은 전체화면 전환
	public void initGroup(JScrollPane jsp_bubble) {
		jp_bubble = new JPanel();
		GroupLayout layout = new GroupLayout(jp_bubble);
		jp_bubble.setLayout(layout);
		layout.setHorizontalGroup(layout.createSequentialGroup()
			.addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
				.addComponent(this)
				.addComponent(jsp_bubble)
			)
		);
		layout.setVerticalGroup(layout.createSequentialGroup()
			.addComponent(this,75,75,75)
			.addComponent(jsp_bubble)
		);
	}
	
	//언어별 게시판 선택 이벤트 > 게시판 열기 : 뒤로가기 버튼 포함
	public void choosePost() {
		jp_bt_java.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				if(e.getX()>=20&&e.getX()<=380&&e.getY()>=10&&e.getY()<=90) {
					System.out.println("java");
					remove(page.jp_page);
					page.jp_page = jp_bubble;
					add(page.jp_page);
					revalidate();
					repaint();
				}
				super.mouseClicked(e);
			}
		});
		jp_bt_oracle.addMouseListener(new MouseAdapter() { 
			@Override
			public void mouseClicked(MouseEvent e) {
				if(e.getX()>=20&&e.getX()<=380&&e.getY()>=10&&e.getY()<=90) {
					System.out.println("oracle");
				}
				super.mouseClicked(e);
			}
		});
		jp_bt_javascript.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				if(e.getX()>=20&&e.getX()<=380&&e.getY()>=10&&e.getY()<=90) {
					System.out.println("javascript");
				}
				super.mouseClicked(e);
			}
		});
		jp_bt_html.addMouseListener(new MouseAdapter() { 	
			@Override
			public void mouseClicked(MouseEvent e) {
				if(e.getX()>=20&&e.getX()<=380&&e.getY()>=10&&e.getY()<=90) {
					System.out.println("html");
				}
				super.mouseClicked(e);
			}
		});
		jp_bt_android.addMouseListener(new MouseAdapter() { 	
			@Override
			public void mouseClicked(MouseEvent e) {
				if(e.getX()>=20&&e.getX()<=380&&e.getY()>=10&&e.getY()<=90) {
					System.out.println("android");
				}
				super.mouseClicked(e);
			}
		});
	}

}