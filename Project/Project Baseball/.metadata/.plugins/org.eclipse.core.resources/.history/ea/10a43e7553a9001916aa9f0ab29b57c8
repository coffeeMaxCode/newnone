package seontalk.view;

import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseWheelEvent;
import java.awt.event.MouseWheelListener;
import java.util.ArrayList;
import java.util.List;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JViewport;
import javax.swing.SwingConstants;
import javax.swing.SwingUtilities;

@SuppressWarnings("serial")
public class MentorListSelect extends JPanel {
	//전체화면 객체주입되는 변수
	MainPage 		page 			= null;	
	//상단 제목 라벨
	JLabel 			jlb 			= new JLabel(); 
	Font 			myfont 			= new Font("HY견고딕",Font.PLAIN,26);
	//화면 전환 패널
	JPanel			jp_bubble		= new JPanel();
	JScrollPane 	jsp_bubble 		= new JScrollPane(jp_bubble
			//메뉴목록에 스크롤 적용
			,JScrollPane.VERTICAL_SCROLLBAR_NEVER		
			//스크롤바 안보이게 설정(드래그,휠 이벤트 적용)
			,JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
	//랭킹게시판 랭킹 구성
	JPanel 			jp_grid 		= new JPanel();
	//랭킹 패널
	MentorRank2_select	jp_mrs		= new MentorRank2_select(1);
	
	public MentorListSelect(MainPage page,String name) {
		this.page = page;
		setLayout(null);
		jlb.setIcon(new ImageIcon(".\\src\\images\\preview01.png"));
		jlb.setBounds(15, 15, 300, 50);
		jlb.setText(name);
		jlb.setFont(myfont);		
		//화면 스크롤 이벤트
		initMouseDrag();
		initMouseWheel();
		initGroup();
		initButton();
		setBackground(new Color(255,224,200));
		add(jlb);
	}
	
	///// 페이지 구성 상단 jlb // 하단 rank list
	public void initGroup() {
		List<MentorRank2_select> rankList = new ArrayList<>();
		MentorRank2_select rank = null;
		for(int i=0;i<100;i++) {
			rank = new MentorRank2_select(i);
			rankList.add(rank);
		}
		jsp_bubble.setLayout(new GridLayout(rankList.size(),1));
		for(int i=0;i<rankList.size();i++) {
			jsp_bubble.add(rankList.get(i));
		}
		GroupLayout layout = new GroupLayout(jp_bubble);
		jp_bubble.setLayout(layout);
		layout.setHorizontalGroup(layout.createSequentialGroup()
			.addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
				.addComponent(this)
				.addComponent(jsp_bubble)
			)
		);
		layout.setVerticalGroup(layout.createSequentialGroup()
			.addComponent(this,75,75,75)
			.addComponent(jsp_bubble)
		);
	}
	
	class MentorRank2_select extends JPanel{
		JLabel jlb_rank = null;
		JLabel jlb_nick = null;
		JLabel jlb_interest = null;
		JPanel jp_profile = null;
		JPanel jp_blank = new JPanel();
		String imgName = "gude_1.png";
		public MentorRank2_select(int i) {
			jlb_rank = new JLabel(Integer.toString(i+1));
			jlb_nick = new JLabel(Integer.toString(i+1)+"nick");
			jlb_interest = new JLabel(Integer.toString(i+1)+"분야");
			jlb_rank.setOpaque(true);
			jlb_nick.setOpaque(true);
			jlb_interest.setOpaque(true);
			jlb_rank.setBackground(new Color(255,224,200));
			jlb_nick.setBackground(new Color(255,224,200));
			jlb_interest.setBackground(new Color(255,224,200));
			jlb_rank.setHorizontalAlignment(SwingConstants.CENTER);
			jlb_rank.setVerticalAlignment(SwingConstants.CENTER);
			jlb_nick.setHorizontalAlignment(SwingConstants.CENTER);
			jlb_nick.setVerticalAlignment(SwingConstants.CENTER);
			jlb_interest.setHorizontalAlignment(SwingConstants.CENTER);
			jlb_interest.setVerticalAlignment(SwingConstants.CENTER);
			jp_blank.setBackground(new Color(255,224,200));
			
			jp_profile = new ProfileImg(imgName,0,0,80,80);
			
			GroupLayout layout = new GroupLayout(this);
			this.setLayout(layout);
			layout.setHorizontalGroup(layout.createSequentialGroup()
					.addComponent(jlb_rank,80,80,80)
					.addComponent(jp_profile,80,80,80)
					.addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
							.addComponent(jlb_nick,240,240,240)
							.addComponent(jlb_interest,240,240,240)
							)
					);
			layout.setVerticalGroup(layout.createSequentialGroup()
					.addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
							.addComponent(jlb_rank,80,80,80)
							.addComponent(jp_profile,80,80,80)
							.addGroup(layout.createSequentialGroup()
									.addComponent(jlb_nick,40,40,40)
									.addComponent(jlb_interest,40,40,40)
									)
							)
					);

		}
	}

	//휠을 이용한 스크롤 이벤트 메소드
		public void initMouseWheel() {	
			jsp_bubble.addMouseWheelListener(new MouseWheelListener() {
				@Override
				//마우스 휠이 움직일때
				public void mouseWheelMoved(MouseWheelEvent e) {	
					//움직이는 정도의 값을 받아서
					int scroll = e.getWheelRotation(); 
					if(scroll<0) {
						JViewport viewPort = (JViewport) SwingUtilities.getAncestorOfClass(JViewport.class, jp_bubble);
						if (viewPort != null) {
							//현재 보여지는 부분정보얻고
							Rectangle view = viewPort.getViewRect();	
							//그 정보에서의 y좌표를 정도값을 반영하여 수정
							view.y -= 20*Math.abs(scroll);				
							//수정값 만큼을 화면에 적용하면 스크롤을 움직이는 효과가 나타남.
							jp_bubble.scrollRectToVisible(view);		
						}
					}
					else {
						JViewport viewPort = (JViewport) SwingUtilities.getAncestorOfClass(JViewport.class, jp_bubble);
						if (viewPort != null) {
							Rectangle view = viewPort.getViewRect();
							view.y += 20*scroll;
							jp_bubble.scrollRectToVisible(view);
						}
						
					}
					
				}
			});
		}
		
		//드래그를 이용한 스크롤 이벤트 메소드
		public void initMouseDrag() {	
			//마우스이벤트가 선언될 객체 생성
			MouseAdapter ma = new MouseAdapter() {	
				//초기 좌표값이 저장될 Point변수
	            Point origin;	
	            @Override
	          //마우스가 눌렸을때
	            public void mousePressed(MouseEvent e) {
	            	//눌린 위치 point값 저장
	                origin = new Point(e.getPoint());		
	            }
	            @Override
	          //드래그가 되면
	            public void mouseDragged(MouseEvent e) {	
	                if (origin != null) {
	                    JViewport viewPort = (JViewport) SwingUtilities.getAncestorOfClass(JViewport.class, jp_bubble);
	                    if (viewPort != null) {
	                    	//초기위치와 드래그한 정도값(변화량)을 받고
	                        int deltaY = origin.y - e.getY();		

	                        Rectangle view = viewPort.getViewRect();
	                      //변화량 만큼
	                        view.y += deltaY;						
	                      //화면이동을 적용
	                        jp_bubble.scrollRectToVisible(view);	
	                    }
	                }
	            }
	        };
	      //마우스어댑터 객체를 스크롤이 적용되는 panel에 add
	        jp_bubble.addMouseListener(ma);		
	        jp_bubble.addMouseMotionListener(ma);
		}
		
	
	public void initButton() {
		//이전 페이지 이벤트 
		jlb.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				if(e.getX()>=5&&e.getX()<=35&&e.getY()>=0&&e.getY()<=40) {
					super.mouseClicked(e);
					page.remove(page.jp_page);
					page.jp_page = page.jp_mentor.jp_bubble;
					page.add(page.jp_page);
					page.revalidate();
					page.repaint();
				}
			}
		});
	}
}
